{% set version = "0.16.0" %}
{% set filename = "apache-arrow-" + version + ".tar.gz" %}
{% set checksum = "261992de4029a1593195ff4000501503bd403146471b3168bd2cc414ad0fb7f5" %}
{% set number = "5" %}
{% set cuda_enabled = cuda_compiler_version is not undefined and cuda_compiler_version == '9.2' %}
{% set build_ext_version = "1.0.0" %}
{% set build_ext = "cuda" if cuda_enabled else "cpu" %}

package:
  name: arrow-cpp-ext

source:
  fn: {{ filename }}
  url: https://dist.apache.org/repos/dist/release/arrow/arrow-{{ version }}/{{ filename }}
  sha256: {{ checksum }}

build:
  skip: true  # [win and vc<14]
  skip: true  # [cuda_compiler_version not in (undefined, "None", "9.2")]
  number: {{ number }}
  run_exports:
    - {{ pin_subpackage("arrow-cpp", max_pin="x.x.x") }}

outputs:
  - name: arrow-cpp-proc
    version: {{ build_ext_version }}
    build:
      number: 0
      string: "{{ build_ext }}"
    test:
      commands:
        - exit 0
    about:
      home: http://github.com/apache/arrow
      license: Apache-2.0
      license_file:
        - LICENSE.txt
      summary: 'A meta-package to select Arrow build variant'

  - name: arrow-cpp
    script: build-arrow.sh  # [not win]
    script: bld.bat         # [win]
    version: {{ version }}
    build:
      number: {{ number }}
      string: "py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ number }}_{{ build_ext }}"
      skip: true  # [win and vc<14]
      skip: true  # [cuda_compiler_version not in (undefined, "None", "9.2")]
      ignore_run_exports:
        - cudatoolkit
      track_features:
        {{ "- arrow-cuda" if cuda_enabled else "" }}
    requirements:
      build:
        - cmake
        - autoconf  # [unix]
        - ninja
        - make      # [unix]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler("cuda") }}  # [cuda_compiler_version is not undefined and cuda_compiler_version == '9.2']
      host:
        - aws-sdk-cpp
        - boost-cpp
        - brotli
        - bzip2
        - c-ares
        - gflags
        - glog
        - grpc-cpp
        - libprotobuf
        - clangdev 7.*  # [not (aarch64 or ppc64le)]
        - llvmdev 7.*   # [not (aarch64 or ppc64le)]
        - lz4-c
        - numpy 1.16.*
        - orc  # [unix]
        - python
        - rapidjson
        - re2
        - snappy
        - thrift-cpp >=0.11
        - zlib
        - zstd
      run:
        - {{ pin_compatible('numpy', lower_bound='1.16') }}
        - aws-sdk-cpp
        - boost-cpp
        - brotli
        - c-ares
        - gflags
        - glog
        - grpc-cpp
        - lz4-c
        - python
        - re2
        - snappy
        - zlib
        - zstd
      run_constrained:
        - arrow-cpp-proc * {{ build_ext }}
        - cudatoolkit >=9.2
    test:
      commands:
        # headers
        - test -f $PREFIX/include/arrow/api.h              # [unix]
        - test -f $PREFIX/include/arrow/flight/types.h     # [unix]
        - test -f $PREFIX/include/plasma/client.h          # [unix]
        - test -f $PREFIX/include/gandiva/engine.h         # [unix and not (aarch64 or ppc64le)]
        - test -f $PREFIX/include/parquet/api/reader.h     # [unix]
        - if not exist %LIBRARY_INC%\\arrow\\api.h exit 1            # [win]
        - if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1       # [win]
        - if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1  # [win]

        # shared
        - test -f $PREFIX/lib/libarrow.so            # [linux]
        - test -f $PREFIX/lib/libarrow_dataset.so    # [linux]
        - test -f $PREFIX/lib/libarrow_flight.so     # [linux]
        - test -f $PREFIX/lib/libarrow_python.so     # [linux]
        - test -f $PREFIX/lib/libparquet.so          # [linux]
        - test -f $PREFIX/lib/libgandiva.so          # [linux and not (aarch64 or ppc64le)]
        - test -f $PREFIX/lib/libplasma.so           # [linux]
        {{ "- test %s -f $PREFIX/lib/libarrow_cuda.so" % (['!', ''][cuda_enabled]) }}                         # [linux]
        {{ "- test %s -f $PREFIX/lib/libarrow_cuda.dylib" % (['!', ''][cuda_enabled]) }}                      # [osx]
        {{ "- if %s exist %%PREFIX%%\\Library\\bin\\arrow_cuda.dll exit 1" % (['', 'not'][cuda_enabled]) }}   # [win]
        - test -f $PREFIX/lib/libarrow.dylib          # [osx]
        - test -f $PREFIX/lib/libarrow_dataset.dylib  # [osx]
        - test -f $PREFIX/lib/libarrow_python.dylib   # [osx]
        - test -f $PREFIX/lib/libgandiva.dylib        # [osx]
        - test -f $PREFIX/lib/libparquet.dylib        # [osx]
        - test -f $PREFIX/lib/libplasma.dylib         # [osx]
        - if not exist %PREFIX%\\Library\\bin\\arrow.dll exit 1          # [win]
        - if not exist %PREFIX%\\Library\\bin\\arrow_dataset.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\arrow_flight.dll exit 1   # [win]
        - if not exist %PREFIX%\\Library\\bin\\arrow_python.dll exit 1   # [win]
        - if not exist %PREFIX%\\Library\\bin\\parquet.dll exit 1        # [win]
        - if not exist %PREFIX%\\Library\\bin\\gandiva.dll exit 1        # [win]

        # absence of static libraries
        - test ! -f $PREFIX/lib/libarrow.a          # [unix]
        - test ! -f $PREFIX/lib/libarrow_dataset.a  # [unix]
        - test ! -f $PREFIX/lib/libarrow_flight.a   # [unix]
        - test ! -f $PREFIX/lib/libarrow_python.a   # [unix]
        - test ! -f $PREFIX/lib/libplasma.a         # [unix]
        - test ! -f $PREFIX/lib/libparquet.a        # [unix]
        - test ! -f $PREFIX/lib/libgandiva.a        # [unix]
        - if exist %PREFIX%\\Library\\lib\\arrow_static.lib exit 1          # [win]
        - if exist %PREFIX%\\Library\\lib\\arrow_dataset_static.lib exit 1  # [win]
        - if exist %PREFIX%\\Library\\lib\\arrow_flight_static.lib exit 1   # [win]
        - if exist %PREFIX%\\Library\\lib\\arrow_python_static.lib exit 1   # [win]
        - if exist %PREFIX%\\Library\\lib\\parquet_static.lib exit 1        # [win]
        - if exist %PREFIX%\\Library\\lib\\gandiva_static.lib exit 1        # [win]

    about:
      home: http://github.com/apache/arrow
      license: Apache-2.0
      license_file:
        - LICENSE.txt
      summary: 'C++ libraries for Apache Arrow'

about:
  home: http://github.com/apache/arrow
  license: Apache-2.0
  license_file:
    - LICENSE.txt
  summary: 'C++ libraries for Apache Arrow'

extra:
  recipe-maintainers:
    - wesm
    - xhochy
    - leifwalsh
    - jreback
    - cpcloud
    - pcmoritz
    - robertnishihara
    - siddharthteotia
    - kou
    - kszucs
    - pitrou
    - pearu
