#!/bin/sh
set -ex

# Build dependencies
export ARROW_HOME=$PREFIX
export PARQUET_HOME=$PREFIX
export SETUPTOOLS_SCM_PRETEND_VERSION=$PKG_VERSION
export PYARROW_BUILD_TYPE=release
export PYARROW_WITH_ACERO=1
export PYARROW_WITH_DATASET=1
export PYARROW_WITH_FLIGHT=1
export PYARROW_WITH_GANDIVA=1
export PYARROW_WITH_GCS=1
export PYARROW_WITH_HDFS=1
export PYARROW_WITH_ORC=1
export PYARROW_WITH_PARQUET=1
export PYARROW_WITH_PARQUET_ENCRYPTION=1
export PYARROW_WITH_S3=1
export PYARROW_WITH_SUBSTRAIT=1
export PYARROW_CMAKE_GENERATOR=Ninja
export PYARROW_CMAKE_OPTIONS="-DARROW_SIMD_LEVEL=NONE"
BUILD_EXT_FLAGS=""

# Enable CUDA support
if [[ ! -z "${cuda_compiler_version+x}" && "${cuda_compiler_version}" != "None" ]]; then
    export PYARROW_WITH_CUDA=1
else
    export PYARROW_WITH_CUDA=0
fi

# Resolve: Make Error at cmake_modules/SetupCxxFlags.cmake:338 (message): Unsupported arch flag: -march=.
if [[ "${target_platform}" == "linux-aarch64" ]]; then
    export PYARROW_CMAKE_OPTIONS="-DARROW_ARMV8_ARCH=armv8-a ${PYARROW_CMAKE_OPTIONS}"
fi

if [[ "${target_platform}" == osx-* ]]; then
    # See https://conda-forge.org/docs/maintainer/knowledge_base.html#newer-c-features-with-old-sdk
    CXXFLAGS="${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY"
fi

if [[ "${target_platform}" == "linux-aarch64" ]] || [[ "${target_platform}" == "linux-ppc64le" ]]; then
    # Limit number of threads used to avoid hardware oversubscription
    export CMAKE_BUILD_PARALLEL_LEVEL=4
fi

# Modify ArrowOptions.cmake to set build flags for other components
sed -ie "s;ARROW_ACERO \"OFF;ARROW_ACERO \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_COMPUTE \"OFF;ARROW_COMPUTE \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_DATASET \"OFF;ARROW_DATASET \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_GANDIVA \"OFF;ARROW_GANDIVA \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_FLIGHT \"OFF;ARROW_FLIGHT \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
# sed -ie "s;ARROW_FLIGHT_SQL \"OFF;ARROW_FLIGHT_SQL \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_GCS \"OFF;ARROW_GCS \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_HDFS \"OFF;ARROW_HDFS \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_ORC \"OFF;ARROW_ORC \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_S3 \"OFF;ARROW_S3 \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake
sed -ie "s;ARROW_SUBSTRAIT \"OFF;ARROW_SUBSTRAIT \"ON;g" ${PREFIX}/lib/cmake/Arrow/ArrowOptions.cmake

cd python

$PYTHON setup.py \
        build_ext \
        install --single-version-externally-managed \
                --record=record.txt

if [[ "$PKG_NAME" == "pyarrow" ]]; then
    rm -r ${SP_DIR}/pyarrow/tests
fi

# generated by setup.py
rm -rf build
cd ..
